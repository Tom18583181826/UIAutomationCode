查询：
select distinct 字段名1,字段名2,count(字段名3)
from 表名1 (join 表名2 on 判断条件)
where binary 筛选条件
group by 分组的字段名
having (分组后的筛选可使用统计函数，where后不能使用统计函数)
order by 排序字段1 desc(或:asc),排序字段2 desc(或:asc)
limit m,n(或:n offset m);

union

select...

命令说明：distinct            ---去重
        count()             ---统计函数，用于统计表中的数据(行数)
                                sum()-和
                                max()-最大值
                                min()-最小值
                                avg()-平均值
        binary              ---区分大小写
        limit               ---分页,m代表起始位(默认从零开始可省略),n代表数量
        order by            ---排序,desc降序,asc升序(默认)
        join on             ---内连接查询,on后确认判断条件(注:join...on和where不能存在于同一个sql语句中)
        left join on        ---左外连接查询,查询出左表的全部数据
        right join on       ---右外连接查询,查询出右表的全部数据
        union(或union all)   ---把多个sql语句执行的结果集合在一个sql表中

内连接的作用：
        找出满足条件的数据
外连接的作用:
        满足某一张表的完整性(既找出满足条件的数据又找出不满足条件的数据)
左外连接和右外连接的区别：
        没有本质区别，仅是表的连接位置不一样，以左外连接查询为例，以左表为基准将右表的数据填充进来
表的别名的作用:
        1.通过表的别名标识多个表之间的关联关系
        2.提高编写sql的效率
什么情况下可以分组:
        通常表中有重复数据的字段可以分组
=========================================================================================================
添加：
create database 数据库名;

create table 表名;

insert into 表名(字段名1，字段名2)
values (数据1值1,数据1值2),(数据2值1,数据2值2);

命令说明：
        不写字段名默认按顺序添加
        主键为自动新增字段可以省略
=========================================================================================================
编辑:
update 表名 set 字段名=new值 where 筛选需要修改的数据;
=========================================================================================================
删除：
drop database 数据库名;

drop table 表名;

delete from 表名 where 筛选需要删除的数据;

truncate 表名;       ---快速删除表中的数据

drop、delete、truncate的区别：
        1.drop删除整个表，包括表的结构和数据，删除后无法恢复
        2.delete删除筛选的表中数据，保留表的结构，可以使用rollback命令回滚删除操作,会触发触发器(Trigger)的执行
        3.truncate删除表中的全部数据，保留表的结构，没有办法恢复数据，不会触发触发器(Trigger)的执行